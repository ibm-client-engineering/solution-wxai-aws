"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4625],{5050:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"flight-log-34","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-34","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-06-05-cocreate.mdx","title":"Log 34 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-06-05T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.89,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 34 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-34","tags":["log"]},"unlisted":false,"nextItem":{"title":"Log 33 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-33"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Today\'s Accomplishments\\n- Further configuration of watsonx Assistant\\n\\n### Summary\\n- Pivoting from external integrations \\n    - Unable to configure proxy to reach out to external sites from OCP\\n- Continuing configuration of assistant actions and non-extenral connections\\n    - Assistant configured\\n- Continuing configuration of NeuralSeek\\n\\n## Decisions and Action Items (DAI)\\n- Investigation of cluster proxy configuration (post POC)\\n- Provide a demonstration of ServiceNow/Outlook integration via Orchestrate and Assistant\\n\\n## Lessons Learned\\n- Proxy configuration for cluster required for application access to external sources - To be investigated post-POC\\n\\n## Next Steps\\n- Application verification"},{"id":"flight-log-33","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-33","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-31-cocreate.mdx","title":"Log 33 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-31T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.135,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 33 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-33","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 34 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-34"},"nextItem":{"title":"Log 32 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-32"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Today\'s Accomplishments\\n\\n### Summary\\n- Brief watsonx.ai Prompt Lab demonstration\\n- Reconfiguring watsonx Assistant front end (per customer request, to be worked on)\\n- Continuing proxy investigation for the cluster\\n    - Applying patch to set environment variables for the pods via RSI patch [IBM documentation here](https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=2-customizing-pod-specifications-rsi)\\n\\n## Decisions and Action Items (DAI)\\n- ServiceNow connectivity being investigated\\n    - Issue with proxy configuration not allowing watsonx Assistant/Orchestrate communication with ServiceNow.com\\n- watsonx Assistant front-end enhancements with customer\\n    - Chat greeting enhancements\\n\\n## Lessons Learned\\n- pdf files needed for watson Assistant extensions available to the cluster internally (no external access or configurable access to S3 buckets)\\n    - Workaround: Hosted pdf files on the bastion httpd server (originally used for the OCP ignition files)\\n\\n## Next Steps\\n- Application configuration\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-32","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-32","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-30-cocreate.mdx","title":"Log 32 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-30T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.48,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 32 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-32","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 33 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-33"},"nextItem":{"title":"Log 31 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-31"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Attempting proxy reconfiguration for the cluster\\n        ```shell\\n        # Customer data redacted\\n        kubectl get pods -n cpd -o json | jq -r \u2018.items[].metadata.labels[\u201capp.kubernetes.io/instance\u201d]\u2019 | sort | uniq\\n        cpd-cli manage enable-rsi --cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS}\\n        cat << EOF >> cpfs-proxy-envs.json\\n        [ {\\n            \u201cname\u201d:  \u201cHTTP_PROXY\u201d,\\n            \u201cvalue\u201d: \u201chttp://http.proxy.customer.com:8000/\u201d\\n        }, {\\n            \u201cname\u201d:  \u201chttp_proxy\u201d,\\n            \u201cvalue\u201d: \u201chttp://http.proxy.customer.com:8000/\u201d\\n        }, {\\n            \u201cname\u201d:  \u201cHTTPS_PROXY\u201d,\\n            \u201cvalue\u201d: \u201chttp://http.proxy.customer.com:8000/\u201d\\n        }, {\\n            \u201cname\u201d:  \u201chttps_proxy\u201d,\\n            \u201cvalue\u201d: \u201chttp://http.proxy.customer.com:8000/\u201d\\n        }, {\\n            \u201cname\u201d:  \u201cNO_PROXY\u201d,\\n            \u201cvalue\u201d: \u201c.aws-nonprod.xxx.com,.ibm-wxai.aws-nonprod.customer.com.apps.ibm-wxai.aws-nonprod.xxx.com,172.30.0.0/16,10.128.0.0/14,10.19.170.0/25\u201d\\n        }, {\\n            \u201cname\u201d:  \u201cno_proxy\u201d,\\n            \u201cvalue\u201d: \u201c.aws-nonprod.xxx.com,.ibm-wxai.aws-nonprod.customer.com.apps.ibm-wxai.aws-nonprod.xxx.com,172.30.0.0/16,10.128.0.0/14,10.19.170.0/25\u201d\\n        } ]\\n        EOF\\n        cpd-cli manage create-rsi-patch \\\\\\n            --cpd_instance_ns=cpd \\\\\\n            --patch_name=\u201ccpfs-proxy\u201d \\\\\\n            --description=\u201cadd proxy settings to CPD\u201d \\\\\\n            --patch_type=rsi_pod_env_var \\\\\\n            --patch_spec=/tmp/work/rsi/cpfs-proxy-envs.json \\\\\\n            --spec_format=set-env \\\\\\n            --select_all_pods=true \\\\\\n            --include_labels=wa \\\\\\n            --exclude_labels=app:rsi \\\\\\n            --skip_apply=false \\\\\\n            --state=active\\n        ```\\n    - New configuration requires watsonx Assistant pod reboot, waiting until after further application configurations\\n    - Continuing to configure NeuralSeek assistant\\n\\n## Decisions and Action Items (DAI)\\n- ServiceNow connectivity being investigated\\n    - Issue with proxy configuration not allowing watsonx Assistant/Orchestrate communication with ServiceNow.com\\n\\n## Lessons Learned\\n- pdf files needed for watson Assistant extensions available to the cluster internally (no external access or configurable access to S3 buckets)\\n    - Workaround: Hosted pdf files on the bastion httpd server (originally used for the OCP ignition files)\\n\\n## Next Steps\\n- Application configuration\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-31","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-31","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-29-cocreate.mdx","title":"Log 31 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-29T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.685,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 31 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-31","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 32 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-32"},"nextItem":{"title":"Log 30 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-30"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Today\'s Accomplishments\\n- Successful configuration of wastsonx Assistant with PDF lookups\\n- Successful validation of NeuralSeek souce attribution\\n\\n### Summary\\n- TS016344977 opened with IBM support to investigate watson discovery EDB cluster issue\\n    - Watson Discovery has an EDB cluster that has only 1/2 pods running, with one pod stuck in CrashLoopBackoff\\n    - Troubleshooting with support\\n    - Support identified an issue with the Postgress Database\\n        - Postgress database not running putting the cluster in an unhealthy state\\n            ```\\n            {\\"level\\": \\"info\\", \\"ts\\":\\"2024-05-29119:39:062\\", \\"logger\\": \\"pg_rewind\\", \\"msg\\": \\"pg_rewind: connected to server\\", \\"pipe\\": \\"stderr\\", \\"logging-pod\\": \\"wd-discovery-cn-postgres-1\\"}\\n            ```\\n            ```\\n            {\\"level\\": \\"info\\", \\"ts\\":\\"2024-05-29119:39:062\\", \\"logger\\": \\"pq rewind\\", \\"msg\\": \\"pg_rewind: fatal: target server must be shut down cleanly\\" \\"pipe\\":\\"stderr\\" \\"logging_pod\\": \\"wd-discovery-cn-postqres-1\\"}\\n            ```\\n        - Engaging Postgress support\\n- Continuing watsonx Assistant configuration\\n    - Hosting response PDFs on the bastion httpd server\\n    - wastsonx Assistant with PDF lookup configured \\n- Continuing NeuralSeek configuration\\n    - Test questions verified\\n- Retrying ServiceNow Skills\\n    - Configuring proxy in the skill yaml/json\\n    - Same timeout error when trying skill, continuing investigation\\n\\n## Decisions and Action Items (DAI)\\n- ServiceNow connectivity being investigated\\n    - Issue with proxy configuration not allowing watsonx Assistant/Orchestrate communication with ServiceNow.com\\n\\n## Lessons Learned\\n- pdf files needed for watson Assistant extensions available to the cluster internally (no external access or configurable access to S3 buckets)\\n    - Workaround: Hosted pdf files on the bastion httpd server (originally used for the OCP ignition files)\\n\\n## Next Steps\\n- Application configuration\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-30","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-30","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-28-cocreate.mdx","title":"Log 30 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-28T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.345,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 30 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-30","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 31 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-31"},"nextItem":{"title":"Log 29 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-29"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Testing NeuralSeek functionality\\n- NeuralSeek verified opperational\\n- Configuring watsonx Assistant ServiceNow extension\\n    - Unable to access ServiceNow, getting blocked outbound\\n    - Investigating AWS and Cluster network connectivity\\n        - Curl requests working from bastion, not from application or cluster\\n    - Issue found: Customer proxy needs to be used in all API requests (even though cluster is configured to use proxy)\\n        - ~~Proposed workaround: Add proxy to OpenAPI spec for watsonx Assistant and Orchestrate~~\\n    - Fix: Configure cluster environments to use customer proxy\\n            ```\\n            oc set env deployment --all http_proxy=http://my_proxy:my_port\\n            oc set env deployment --all https_proxy=http://my_proxy:my_port\\n            ```\\n\\n## Decisions and Action Items (DAI)\\n- ServiceNow connectivity being investigated\\n    - Issue with proxy configuration not allowing watsonx Assistant/Orchestrate communication with ServiceNow.com\\n\\n## Lessons Learned\\n- If a proxy is required, the proxy configuration needs to be applied to the deployment environments for cluster applications to use the proxy. Initially the proxy was only applied to the cluster itself, not the deployment environments.\\n\\n## Next Steps\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-29","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-29","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-22-cocreate.mdx","title":"Log 29 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-22T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 29 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-29","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 30 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-30"},"nextItem":{"title":"Log 28 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-28"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Continuing to investigate NeuralSeek configuration / CP4D\\n    - Support team reviewing CP4D install and connectivity\\n    - Potential issues found on customer network blocking API connectivity\\n            Run port forward service on port 8888\\n            ```shell\\n            oc port-forward service/ibm-nginx-svc 8888:443\\n            ```\\n            From a new terminal on the same node:\\n            ```shell\\n            ss -tlnp\\n            ```\\n            Verified 8888 listenting on localhost\\n            ```shell\\n            # Custom support js\\n            curl -k -LO https://127.0.0.1:8888/common-nav/api/nls/login-nls.js\\n            ```\\n            Output shows Pod recieving required files \\n            Something in between the pods that disallows authenticated traffic \\n    - Customer to engage network team to assess / log network traffic via AWS\\n- Issue resolved\\n    - There were eronious EC2 instances in the AWS load balencer from previous configurations that interfered with cluster communication\\n    - Issue was not constant and only appeared when network traffic was sent to an incorrect destination (non-existant) by the load balencer\\n- Ready to continue application verification\\n\\n## Decisions and Action Items (DAI)\\n- None pending\\n\\n## Lessons Learned\\n- Cleaning previous networking configurations\\n\\n## Next Steps\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-28","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-28","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-21-cocreate.mdx","title":"Log 28 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-21T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 28 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-28","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 29 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-29"},"nextItem":{"title":"Log 27 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-27"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Continuing to investigate NeuralSeek configuration / CP4D\\n    - Reset all pods that are used in the CP4D login flow using the following commands:\\n            ```shell\\n            oc delete pod -n cpd -l component=ibm-nginx\\n            ```\\n            ```shell\\n            oc delete pod -n cpd -l component=usermgmt\\n            ```\\n            ```shell\\n            oc delete pod -n cpd -l component=zen-core\\n            ```\\n            ```shell\\n            oc delete pod -n cpd -l component=zen-core-api\\n            ```\\n    - Confirmed metastore-db is also healthy using this command:\\n            ```shell\\n            oc get cluster.postgresql.k8s.enterprisedb.io zen-metastore-edb -n cpd\\n            ```\\n    - Still unable to login and browse CP4D consistently\\n    - Errors found in usermgmt pods that appear after failed page loads in CP4D\\n    - Successful use of APIs to query CP4D for a Bearer Token, to list project IDs, and to even generate text from WatsonX\\n    - Neuralseek was able to query WatsonX, however it couldnt interact with Watson Discovery.\\n    - Support ticket was opened previously, updated this morning to include screenshots of the error logs found in usermgmt pods. Ticket has been upgraded to Sev1\\n    - Pods verified\\n    - Engaging support\\n\\n## Decisions and Action Items (DAI)\\n- None pending\\n\\n## Lessons Learned\\n- None today\\n\\n## Next Steps\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-27","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-27","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-20-cocreate.mdx","title":"Log 27 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-20T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.735,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 27 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-27","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 28 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-28"},"nextItem":{"title":"Log 26 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-26"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy Services)--\x3eB\\n    subgraph \\"You are here\\"\\n    B(Application Verification)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Investigating NeuralSeek configuration\\n    - Curl request from application and bastion failing\\n    - Nodes missing machineconfigs, waiting for machineconfigs to propegate through all nodes\\n\\n## Decisions and Action Items (DAI)\\n- None pending\\n\\n## Lessons Learned\\n- None today\\n\\n## Next Steps\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-26","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-26","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-16-cocreate.mdx","title":"Log 26 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-16T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 26 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-26","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 27 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-27"},"nextItem":{"title":"Log 25 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-25"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    subgraph \\"Installation Milestones Complete\\"\\n    A(Deploy bootnode)--\x3e B(Deploy infrastructure)--\x3eC(Deploy OCP)--\x3eD(Prepare CP4D & watsonx ai cartdridge)--\x3eE(Install CP4D)--\x3eF(Deploy Services)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n\\n### Today\'s Accomplishments\\n- Installed NeuralSeek\\n- Installed watsonx Orchestrate\\n\\n### Summary\\n- Installing NeuralSeek\\n- S3 Bucket Configured\\n- Installing watsonx Orchestrate\\n    - Removing/recreating MongoDB pod\\n    - Applied required patch from \'known issues\' list (IBM internal documentation)\\n            ```shell\\n            INSTANCE_NAME=$(oc -n <cpd-namespace> get wa --output jsonpath=\'{.items[0].metadata.name}\')\\n            ```\\n            ```shell\\n            oc patch wa ${INSTANCE_NAME} --type=\'merge\' -p=\'{\\"configOverrides\\":{\\"store\\":{\\"extra_vars\\": {\\"store\\": {\\"MAX_NEW_IA_ASSISTANTS\\":\\"1000\\",\\"MAX_NEW_IA_SKILLS\\":\\"300000\\",\\"ASSISTANT_MAX_PAGE_LIMIT\\":\\"1000\\"}}}}}\'\\n            ```\\n\\n## Decisions and Action Items (DAI)\\n- None pending\\n\\n## Lessons Learned\\n- None today\\n\\n## Next Steps\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-25","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-25","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-15-cocreate.mdx","title":"Log 25 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-15T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.845,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 25 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-25","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 26 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-26"},"nextItem":{"title":"Log 24 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-24"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    C --\x3eD(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF\\n    subgraph \\"You are here\\"\\n    F(Deploy Services)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n\\n### Today\'s Accomplishments\\n- AppConnect installed\\n\\n### Summary\\n- Installing AppConnect\\n- Installing Watsonx Orchestrate (Includes assistant instance)\\n    - Customer continuing install after session\\n\\n## Decisions and Action Items (DAI)\\n- None pending\\n\\n## Lessons Learned\\n- None today\\n\\n## Next Steps\\n- Deploy watsonx.ai\\n- Install NeuralSeek\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-24","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-24","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-14-cocreate.mdx","title":"Log 24 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-14T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.525,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 24 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-24","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 25 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-25"},"nextItem":{"title":"Log 23 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-23"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    C --\x3eD(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF\\n    subgraph \\"You are here\\"\\n    F(Deploy Services)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n\\n### Today\'s Accomplishments\\n- Successful installation of Llama model\\n\\n### Summary\\n- Installing and troubleshooting remaining LLMs for watsonx.ai\\n    - Granite model installed (previous session)\\n    - Issues with installation of Mistral and Llama models\\n        - Investigating Mistral model compatibility\\n            - Determined incompatible with p4d.24xlarge a100-40gb\\n        - Investigating work around for instance type compatability for Llama model p4d.24xlarge a100-40gb in US-East-2\\n- Llama installed and running using workaround (Workaround source https://github.ibm.com/NGP-TWC/ml-planning/issues/37189)\\n    ```yaml\\n    #Add the following to watsonxaiifm-cr:\\n    meta_llama_llama_2_70b_chat:\\n    deployment_yaml_name: llama-2-70b-chat.yaml.j2\\n    pvc_name: meta-llama-llama-2-70b-chat-pvc\\n    svc_name: llama-2-70b-chat\\n    pvc_size: 150Gi\\n    dir_name: models--meta-llama--llama-2-70b-chat\\n    model_name: /watsonxaiifm-models/models--meta-llama--llama-2-70b-chat\\n    cuda_visible_devices: 0,1,2,3,4,5,6,7\\n    model_root_dir: /watsonxaiifm-models\\n    flash_attention: true\\n    deployment_framework: hf_custom_tp\\n    dtype_str: float16\\n    max_batch_size: 128\\n    max_concurrent_requests: 160\\n    max_batch_weight: 200000\\n    max_sequence_length: 4096\\n    max_prefill_weight: 60000\\n    max_new_tokens: 4096\\n    num_shards: 8\\n    hf_modules_cache: /tmp/huggingface/modules\\n    force_apply: no\\n    meta_llama_llama_2_70b_chat_resources:\\n    limits:\\n    cpu: \u201c8\u201d\\n    memory: 246Gi\\n        nvidia.com/gpu: \u201c8\\"\\n    ephemeral-storage: 1Gi\\n    requests:\\n    cpu: \u201c1\u201d\\n    memory: 240Gi\\n        nvidia.com/gpu: \u201c8\\"\\n    ephemeral-storage: 10Mi\\n    ```\\n    ```yaml\\n    #Add the following to watsonxai-cr:\\n    tuning_disabled: true\\n    ```\\n\\n## Decisions and Action Items (DAI)\\n- Mistral installation\\n    - Incompatable with a100-40gb\\n\\n## Lessons Learned\\n- LLM model compatabilities with provisioned resources\\n    - Most IBM LLM\'s require a100-80gb\\n## Next Steps\\n- Deploy watsonx.ai\\n- Install NeuralSeek\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-23","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-23","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-13-cocreate.mdx","title":"Log 23 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-13T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.19,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 23 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-23","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 24 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-24"},"nextItem":{"title":"Log 22 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-22"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    C --\x3eD(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF\\n    subgraph \\"You are here\\"\\n    F(Deploy Services)\\n    end\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n\\n### Today\'s Accomplishments\\n- GPU node provisioned\\n- Deployment of Granite model\\n\\n### Summary\\n- Provisioning GPU node\\n    - Installing GPU operator\\n- Installing watsonx.ai operator\\n    - Waiting on the installer\\n- Facing issues with Mistral IBM models for watsonx.ai - support case open\\n\\n## Decisions and Action Items (DAI)\\n- MCG Secrets created for Cloud Pak components\\n- Authorized Instance Topology\\n- Installed Cloud Pak shared components\\n- Installed Knative\\n- GPU Node Activity and Billing\\n\\n## Lessons Learned\\n- GPU Node Activity\\n    - AWS was charging for a GPU Node while powered-down\\n    - Provisioned the GPU Node using a reserve instance (30 days starting May 6)\\n\\n## Next Steps\\n- Deploy watsonx.ai\\n- Install NeuralSeek\\n- Application configuration\\n    - NeuralSeek\\n    - watsonx.ai Prompt Lab\\n    - watsonx Assistant\\n    - watsonx Orchestrate\\n        - ServiceNow skills\\n        - Microsoft Outlook skills"},{"id":"flight-log-22","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-22","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-10-cocreate.mdx","title":"Log 22 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-10T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.835,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 22 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-22","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 23 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-23"},"nextItem":{"title":"Log 21 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-21"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    C --\x3eD(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF\\n    subgraph \\"You are here\\"\\n    F(Deploy Services)\\n    end\\n```\\n\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - Complete\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n\\n### Today\'s Accomplishments\\n- Successful installation of watsonx Discovery\\n- Successful installation of watson Studio\\n- Successful installation of watson Machine Learning\\n- Successful installation of IBM Knowledge Catalog\\n\\n### Summary\\n- Trobuleshooting watsonx Assistant installation pods\\n    - Starting required pods/containers\\n\\n## Decisions and Action Items (DAI)\\n- None today\\n\\n## Lessons Learned\\n- None today\\n\\n## Next Steps\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-21","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-21","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-09-cocreate.mdx","title":"Log 21 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-09T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":2.4,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 21 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-21","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 22 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-22"},"nextItem":{"title":"Log 20 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-20"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    C --\x3eD(Prepare CP4D & watsonx ai cartdridge)\\n    subgraph \\"You are here\\"\\n    E(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Today\'s Accomplishments\\n- Successful deployment of CP4D\\n- Installed Knative\\n\\n\\n### Summary\\n- Customer has approved required contracts and procedures have been followed to attain an entitlement key\\n- Updated bootnode IP reference in configuration\\n- Re-ran install scripts\\n- MCG Secrets created for Cloud Pak components\\n- Verify cluster up v4.12.8\\n\\t- No errors\\n\\t- Check storage size on nodes, have 5TB disks instead of 500gb as intended\\n\\t\\t- This was set incorrectly in config, reconfiguring worker nodes with proper (worker-template.yaml)\\n\\t- Don\'t need secondary disks on the nodes, NFS will be used instead\\n- Adding GPU node\\n\\t- Updating config.sh, gpu_subnet accurate, security groups set properly\\n\\t- Logging into AWS via aws_sso\\n\\t- Running add_node.sh to add gpu node (runs for about 10 min)\\n\\t- Verifying node draining and uncordon node\\n- Installing nfs provisioner\\n\\t- Operator install unsuccessful\\n        - Fallback to using helm install\\n\\t- Downloading helm repo and install\\n\\t- Tested and verified with test pod that attached to nfs-client storageclass, applying clean up\\n\\n## Decisions and Action Items (DAI)\\n- Authorized Instance Topology\\n\\n## Lessons Learned\\n- Had an issue with \u201capply-cluster-components\u201d which requires connecting to github to download CASE files. Found a solution in the cpd-cli documentation: use two additioanl flags on the command \u201c--case_download=true\u201d and  \u201c--from_oci=true\u201d which tells cpd-cli to download the CASE files from IBM Open Container Initiative instead of github.\\n- While running \u201csetup-instance-topology\u201d for knative, received an error regarding storage. Added ``` \u201c--block_storage_class=${STG_CLASS_BLOCK}\u201d ``` to the command and it completed successfully.\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-20","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-20","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-05-08-cocreate.mdx","title":"Log 20 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-05-08T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.77,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 20 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-20","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 21 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-21"},"nextItem":{"title":"Log 19 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-19"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    subgraph \\"You are here\\"\\n    D(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    C --\x3eD\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Customer has approved required contracts and procedures have been followed to attain an entitlement key.\\n\\n## Decisions and Action Items (DAI)\\n- Customer has worked with us to spin up a new cluster\\n    - Previous cluster had been deleted to save AWS credits\\n    - IBM to provide tighter instruction for the deployment of CP4D\\n- Customer received a GPU reservation\\n    - GPU node has been ordered and deployed\\n    - Costs associated with GPU resources are discounted, but the meter is running once the reservation is accepted.\\n\\n## Lessons Learned\\n- watsonx.ai service requires larger local disks on worker nodes (500Gb)\\n- The GPU node required for watsonx.ai seems to be a limited resource\\n- Had to replace the nodes in the cluster as the attached disks were incorrect\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-19","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-19","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-04-12-cocreate.mdx","title":"Log 19 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-04-12T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.94,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 19 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-19","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 20 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-20"},"nextItem":{"title":"Log 18 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-18"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    subgraph \\"You are here\\"\\n    D(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    C --\x3eD\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure on ref environment and document\\n    - In Progress\\n\\n### Summary\\n- Awaiting entitlement key approval on customer side\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation awaiting customer\'s approval process. This blocks our ability to download software from cp.icr.io\\n    - Customer to provide by EOD Monday\\n- Worker nodes shutdown until approval comes through\\n- Drafted and sent instructions for the customer to resize the worker node disks for when the cluster is brought back online\\n- Drafted and sent instructions for the customer to order a GPU Node\\n    - GPU node to be added to the cluster and then cordoned, drained, and shutdown\\n\\n## Lessons Learned\\n- Preparation for Cloud Pak for Data on OpenShift sizing needed to be adjusted to reflect an under-provisioning of CPU resources\\n- watsonx.ai service requires larger local disks on worker nodes (500Gb)\\n- The GPU node required for watsonx.ai seems to be a limited resource\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n    - Resize local disks for worker nodes\\n    - Customer to order a GPU node and attach it to the cluster\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-18","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-18","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-04-05-cocreate.mdx","title":"Log 18 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-04-05T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.86,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 18 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-18","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 19 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-19"},"nextItem":{"title":"Log 17 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-17"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    subgraph \\"You are here\\"\\n    D(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    C --\x3eD\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Acomplishments\\n- CP4D Final Preparations\\n    - Added options to the CPD VARS file  \\n    - Recreation of work dir\\n\\n### Summary\\n- Trobuleshooting the CP4D CLI\\n- Awaiting entitlement key approval\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation awaiting customer\'s approval process. This blocks our ability to download software from cp.icr.io\\n    - Customer to provide by EOD Monday\\n\\n## Lesons Learned\\n- Preparation for Cloud Pak for Data on OpenShift sizing needed to be adjusted to reflect an under-provisioning of CPU resources\\n\\n## Objective\\n- Start building guided workflows  \\n- Attempt to improve parsing of unstructured tables with WDU (Watson Document Understanding)\\n\\n## Milestones\\n1. Designed some guided workflow concept ideas\\n2. Coded flask app to expose an API to send emails to users from the Watsonx Assistant\\n3. Table parsing with WDU sucesfully configured\\n\\n## Next Steps\\n- Integrate agent based workflows into guided workflows (langchain agents)\\n- Investigate if its possible to improve table parsing\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-17","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-17","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-04-04-cocreate.mdx","title":"Log 17 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-04-04T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.645,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 17 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-17","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 18 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-18"},"nextItem":{"title":"Log 16 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-16"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    subgraph \\"You are here\\"\\n    D(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    C --\x3eD\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Acomplishments\\n- Kublet configuration update applied\\n- Deployed instance of Multicloud Object Gateway\\n\\n### Summary\\n- Reinstalled NFS provisioner (Helm)\\n- Installed OpenShift Data Foundation Operator\\n- Deployed MultiCloud Object Gateway\\n- OpenShift portal is active and cluster appears healthy\\n- Configuring CP4D CLI\\n- Awaiting for final cluster nodes to update through machine config pool\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation awaiting customer\'s approval process. This blocks our ability to download software from cp.icr.io\\n    - Customer to escalate internally\\n\\n## Lesons Learned\\n- Preparation for Cloud Pak for Data on OpenShift sizing needed to be adjusted to reflect an under-provisioning of CPU resources\\n    - This was resolved by..\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-16","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-16","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-04-03-cocreate.mdx","title":"Log 16 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-04-03T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.445,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 16 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-16","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 17 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-17"},"nextItem":{"title":"Log 15 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-15"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    subgraph \\"You are here\\"\\n    D(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    C --\x3eD\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n\\n### Summary\\n- Master nodes attempting to upgrade and are in a stuck state preventing rollback of ingress changes\\n- Attempting to deploy a new cluster\\n- New cluster successfully deployed via latest script\\n- Deploying EFS\\n- Installing OpenShift Data Foundation & Standalone Multicloud Object Gateway\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation awaiting customer\'s approval process. This blocks our ability to download software from cp.icr.io\\n    - Customer to escalate internally\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-15","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-15","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-04-02-cocreate.mdx","title":"Log 15 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-04-02T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.73,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 15 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-15","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 16 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-16"},"nextItem":{"title":"Log 14 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-14"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    B --\x3eC(Deploy OCP)\\n    subgraph \\"You are here\\"\\n    D(Prepare CP4D & watsonx ai cartdridge)\\n    end\\n    C --\x3eD\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Accomplishments\\n- Verifying cluster health in preparation for Cloud Pak for Data install\\n- Verifying network connectivity to application pods\\n\\n### Summary\\n- Attempting to resolve domain name of the OpenShift portal\\n    - Added required cluster-wide settings to proxy\\n        - Added wxai domain information to noProxy configuration `oc edit proxy/cluster`\\n        - Investigating OpenShift error `certificate is valid for oauth-openshift.openshift-authentication.svc`\\n        - Cluster pieces updating, validating health of cluster on later call (may be related to current certificate errors)\\n    - More nodes in \\"ready\\" state\\n    - 1 master node continuing to update causing cluster connectivity issues\\n    - Attempting to drain and restart pending nodes\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation awaiting customer\'s approval process. This blocks our ability to download software from cp.icr.io\\n    - Customer to escalate internally\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-14","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-14","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-04-01-cocreate.mdx","title":"Log 14 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-04-01T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.765,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 14 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-14","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 15 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-15"},"nextItem":{"title":"Log 13 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-13"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    subgraph \\"You are here\\"\\n    C(Deploy OCP)\\n    end\\n    B --\x3eC\\n    C --\x3e D(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy Services)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - Complete\\n3. Install Cloud Pak for Data\\n    - In Progress\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Accomplishments\\n- Installed OpenShift for Data CLI on bastion host\\n\\n### Summary\\n- Installed Cloud Pak for Data CLI on bastion host\\n- Attempting to resolve console URL from customer host (laptop), external to cluster and bastion\\n    - Customer is unable to add entries to Windows host file due to local administrator requirements\\n    - Adding hostname resolution for CP4D\\n- Customer doing offline\\n    - Adding resolvable URL for CP4D, allows for proper CP4D application communication (see Action Item)\\n        - Customer process - sending \'get\' requests requires customer security approval process\\n    - Customer to follow \'multi object gateway\' instructions\\n    - Customer to follow internal process for software trial evaluation, supporting documentation sent\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation licenses for CP4D and watsonx.ai\\n- Customer decision is required to determine cluster console access\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai\\n- Application configurations\\n- Application validations"},{"id":"flight-log-13","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-13","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-29-cocreate.mdx","title":"Log 13 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-29T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.635,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 13 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-13","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 14 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-14"},"nextItem":{"title":"Log 12 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-12"}},"content":"## Objective\\n- Evaluate Watsonx Discovery vs Chromadb for vector store \\n- Start ideating & testing sample complete workflows\\n\\n## Milestones\\n1. Successfully configured working Wx Discovery Vector Store with chunking, embeddings and ELSER semantic search \\n2. Connected this KB in WXD to Watsonx Assistant\\n3. Developed method to parse & detect RAG responses that give step by step instructions, which can be used to create guided workflows\\n\\n## Lessons learned\\n- Wx Discovery seems to have more accurate chunk retrieval than Chromadb\\n- Wx Discovery out-of-the box chatbot answers are also better\\n- Config is simple and can be done in an hour with prewritten code by just passing in credentials\\n\\n## Next Steps\\n- Continue building guided conversations & enable them to conduct operations autonomously"},{"id":"flight-log-12","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-12","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-28-cocreate.mdx","title":"Log 12 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-28T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":2.415,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 12 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-12","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 13 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-13"},"nextItem":{"title":"Log 11 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-11"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode) --\x3e B(Deploy infrastructure)\\n    subgraph \\"You are here\\"\\n    C(Deploy OCP)\\n    end\\n    B --\x3eC\\n    C --\x3e D(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy watsonx.ai)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - In progress\\n3. Install Cloud Pak for Data\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Accomplishments\\n- Successful deployment of OpenShift\\n- Successful setup of storage class\\n\\n### Summary\\n- Nodes were shut down after-hours by customer compliance automated scan\\n    - All nodes must be whitelisted by customer security\\n- Validating health of OCP installation\\n    - All nodes started and responding\\n    - Investigating pods\\n        - Some pods appear to be stuck due to node shutdowns\\n        - Deleting non-responsive pods\\n        - Replacing ICMP range 0 with all on 10.0.0.0/8\\n- Issue - `ConnectivityCheckController` is waiting for transition to desired version (4.12.8) to be completed.\\n    - Investigating proxy configuration\\n    - Adding cluster domain to proxy configuration - configuring local nodes to not use proxy\\n- Fix: Adding noproxy spec to proxy configuration allowed for traffic locally (not through proxy) for nodes\\n- Waiting for configurations to apply (automatically)\\n- <strong>OCP cluster verified working</strong>\\n- Adding storage to cluster for CP4D support\\n    - Creating storage class\\n    ```\\n    # Requires kubeconfig\\n    oc new-project nfs-provisioner\\n    oc config set-context --current --namespace=nfs-provisioner\\n    ```\\n    ```\\n    helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/\\n    helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \\\\\\n        --namespace nfs-provisioner \\\\\\n        --set nfs.server=<EFS URL> \\\\\\n        --set nfs.path=/ \\\\\\n        --set storageClass.defaultClass=true\\n    ```\\n    - Initial install - Local helm install needed\\n    - Retrying by retrieving the external provisioner and copying locally\\n    - Default storage class operational\\n    - Deleted test pod\\n    - Deleted pvx\\n\\n## Lessons learned\\n### OCP Deployment\\n- Customer environment heavily affected configuration of the original deployment script and process\\n    - Security considerations\\n    - Proxy configurations in setup\\n\\n## Decisions and Action Items (DAI)\\n- Software evaluation licenses for CP4D and watsonx.ai\\n- Customer decision is required to determine cluster console access\\n- Add documentation for the CP4D deployment\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai"},{"id":"flight-log-11","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-11","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-27-cocreate.mdx","title":"Log 11 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-27T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":3.875,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 11 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-11","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 12 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-12"},"nextItem":{"title":"Log 10 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-10"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode)\\n    subgraph \\"You are here\\"\\n    B(Deploy infrastructure)\\n    end\\n    A --\x3eB\\n    B --\x3eC(Deploy OCP)\\n    C --\x3e D(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy watsonx.ai)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - In progress\\n3. Install Cloud Pak for Data\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Accomplishments\\n### Summary\\n- Significant progress made in applying the required configurations according to the customer\'s environment policies \\n- Master and Worker nodes responding\\n\\n### Script Attempts\\n#### Cleanup Process\\n- Delete metadata file from \\"wxai\\" directory\\n- Delete stacks created by `create_cluster_step_2.sh` \\n- Remove install state\\n- Ignore first \\"FATAL\\" error logged when running `create_cluster_step_2.sh` \\n#### Attempt 1\\n- Communication Issues\\n    1. httpd not running on bootnode/bastion due to previous reboot\\n    - Fix: Enable httpd service on OS. Script change also made to force\\n    2. Egress rules added to bootnode and master\\n        - ALL AWS default egress connections needed to be manually configured to 10.0.0.0/8 vs AWS default value 0.0.0.0/0 for \\"all\\" traffic\\n#### Attempt 2\\n- Running OCP process manually (outside of script)\\n- Unable to pull images\\n    - Incorrectly pulling images from the bastion host, should be local registry\\n    - Temporary fix: Run `./start_registy.sh /ibm 5000`\\n    - Ignition configuration issue causing error\\n    - Fix: Add deleting state data to the cleanup process\\n#### Attempt 3\\n- Starting from scratch\\n- Running cleanup process\\n- Issue found in authentication configuration. The script is improperly configured to more than 1 authentication set\\n    - This customer deployment requires multiple authentication sets: quai.io, RedHat registry, Artifactory. Only one was tested\\n- Using workaround by manually adding the pullsecret to the create_install_config.sh\\n- Running `create_cluster_step_1.sh` \\n    - Successful\\n- Updated LB DNS configurations manually (to be included in code changes, see Attempt 1)\\n- Running `create_cluster_step_2.sh` \\n- Stalled - ignitions not firing\\n    - bootnode and master security group needed IP range (additonal egress configuration issues, added code changes, see Attempt 1)\\n- Error\\n    - Issue with Openshift installer extraction. For this customer case, we are not using local registry\\n    - Fix: Use general use OpenShift installer from Redhat, which does not assume local registry\\n#### Attempt 4\\n- Running cleanup process\\n- Running `create_cluster_step_2.sh`\\n- Updated LB DNS configurations\\n    -  Worker security group needed validIP range (addition to Attempt 1 and Attempt 2 egress issues, added code changes)\\n        - Replaced IP ranges `0-0` with `0-65535`\\n- Unable to use OpenShift API (oc command) to view pods due to use of untrusted certificates\\n    - Testing workaround use \\"insecure\\" connection by adding flag `--insecure-skip-tls-verify` when using oc \\n    - Example `oc get pods -A --insecure-skip-tls-verify`\\n- Removed worker node external volumes (1tb) from script configuration\\n#### Attempt 5\\n- Retrying using default OpenShift Certificates (bypassing/not creating or using the CA certificate from documentation steps)\\n    - Updated config and removed certificate configuration\\n- Running cleanup process\\n- Running `create_cluster_step_2.sh`\\n- Witnessing certificate failures in script output, but continuing install\\n- Error: Worker nodes not communicatting\\n- Fix/Root Causes\\n    - Removed IPI artififact from script\\n    - Removed `{registry_url}` image content sources from imageContentSources (Airgap) from install config.sh\\n    - Removed fips mode from install config.sh\\n#### Attempt 6\\n- Running cleanup process\\n- Running additional cleanup steps:\\n    - Removed .kube\\n    - unset $KUBCONFIG\\n    - Delete ignition file\\n- Running `create_cluster_step_2.sh`\\n- Worker nodes responding\\n- Certificate error resolved\\n    - Potential root cause(s) (see fixes from Attempt 5)\\n        - IPI artififacts in script\\n        - `{registry_url}` image content sources from imageContentSources (Airgap) from install config.sh\\n        - fips mode from install config.sh\\n- Errors generated from OpenShift to be tracked in next flight log\\n\\n## Decisions and Action Items (DAI)\\n- Validate cluster installation state\\n- Software evaluation licenses for CP4D and watsonx.ai\\n    - Pending approval process \\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai"},{"id":"flight-log-10","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-10","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-26-cocreate.mdx","title":"Log 10 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-26T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":4.425,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 10 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-10","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 11 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-11"},"nextItem":{"title":"Log 9 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-9"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode)\\n    subgraph \\"You are here\\"\\n    B(Deploy infrastructure)\\n    end\\n    A --\x3eB\\n    B --\x3eC(Deploy OCP)\\n    C --\x3e D(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy watsonx.ai)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - In progress\\n3. Install Cloud Pak for Data\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Accomplishments\\n\\n### Validation of current deployment status\\n- Verify \u2018quay.io\u2019 is the registry in config.sh\\n    - Verified in the registry\\n- Add `/usr/local/bin` to `.bashrc` and `.bash_profile` for root\\n- Create a small instance on a different subnet, same VPC, and confirm that IP can be curled. Make require adjusting the Security Group rules for the bootnode. If 8080 fails, then HTTPD config will need be to changed to port 80 and service restarted\\n    - Initial onnectectivity over port 8080 failed\\n    - Fixed by opening port via security group\\n- Changed certificate organization (O) to match the domain\\n- Cert validated - current certificate using output of `openssl x509 -in /ibm/security/certs/ca.crt -text -noout`\\n\\n    ```\\n    Issuer: C = US, O = ec2.internal, CN = CA\\n    Subject: C = US, O = ec2.internal, CN = CA\\n    ```\\n- Changed to\\n\\n    ```\\n    Issuer: C = US, O = `customer domain name`, CN = CA\\n    Subject: C = US, O =  `customer domain name`, CN = CA\\n    ```\\n### Script Attempts\\n#### Cleanup Steps\\n- Remove metadata file from \\"wxai\\" directory\\n- Delete stacks created\\n- Ignore initial \\"FATAL\\" error logged\\n#### Attempt 1\\n- Running `create_cluster_step_1.sh` \\n    - Applied required security tagging, as customer\'s security scans \\"remediate\\" (delete) improperly tagged items\\n    - Depoyment script changes \\n        - Changed resource types and sizes. Example: `gp2 -> gpt3`\\n    - Renaming \\"bootnode\\" nomenclature to bastion host `bastion.\'basedomain\'`\\n    - Renamed certificate organization to match customer domain\\n- Reran create registry script\\n- Proceeded with DNS steps for new Elastic Load Balencer from prevous script\\n- Running `create_cluster_step_2.sh` \\n    - Bootstrap Error\\n        ```\\n        Every Parameters object must contain a Type member\\n        An error occurred (ValidationError) when calling the DescribeStacks operation: Stack with id ibmwxai-6wvkv-bootstrap-stack does not exist\\n        ```\\n    - Solution - Needed to add Type string for parameter\\n        ```yaml\\n        BootstrapIgnitionLocation:\\n        Default: s3://my-s3-bucket/bootstrap.ign\\n        Description: Ignition config file location.\\n        Type: String ### This line was not here\\n        ```\\n#### Attempt 2\\n- AMI Error (repeat)\\n    - Cause: Customer security team denies all public AMI access\\n    - Fixed: Customer approved public AMI usage (for our specific AMI ID for the CoreOS)\\n#### Attempt 3\\n- yaml validation error (new)\\n    `Parameter validation failed: parameter value for parameter name Master1Subnet does not exist. Rollback requested by user`\\n    - Investigated why script is not generating parameter for `Master1Subnet`\\n    - Fix: Typo found in script create_control_plane_param.sh - masters1ubnet -> master1subnet\\n#### Attempt 4\\n- Notified of non-compliance during attempt via email from customer security to customer host\\n    1. Rule Formatting\\n        - Summary: Automated customer security scan \\"remediation\\" removed non-compliant security groups on bootstrap and master (Ingress and Egress)\\n        ```\\n        Security Event: Security Group with Unapproved Egress. The security group non-compliant egress rules have been deleted. Please check your application to ensure the functionality has not been negatively impacted.\\n        ```\\n        \\n        ```\\n        Security Event: Security Group with Unapproved Ingress. The security group non-compliant ingress rules have been deleted. Please check your application to ensure the functionality has not been negatively impacted.\\n        ```\\n        - LB template currently assuming public in sg-lb-template.yaml, bootstrap-template.yaml\\n        ```yaml\\n        CidrIp: 0.0.0.0/0\\n        ```\\n        - Fix: CidrIps need to be replaced with proper public format per customer security\\n        ```yaml\\n        # Replace all instances of 0.0.0.0/0 with\\n        CidrIp: 10.0.0.0/8\\n        ```\\n    2. Encryption Requirements\\n        - All volumes must be encrypted\\n        - Fix: Cloudforms template must be updated to create encrypted resources\\n#### Attempt 5\\n- Redeployment cleanup steps\\n- Running `create_cluster_step_1.sh` \\n    - Successful\\n- Capture DNS output\\n- Add DNS output to config\\n- Running `create_cluster_step_1.sh` \\n- Running `create_cluster_step_2.sh` \\n    - Customer had a hard stop for the day. Awaiting feedback for next session\\n\\n## Decisions and Action Items (DAI)\\n- Adding creation of the ssh key as root user on the bastion node\\n- CoreOS AMI approval from customer (Public AMI\'s are blocked)\\n    - AMI approved, step 2 script succeeded AMI portion\\n- Customer security policies\\n    - Ongoing: Port rule formatting (Example: Using 10.0.0.0/8 instead of 0.0.0.0/0)\\n    - Cleared: Role authorizations\\n- Software evaluation licenses for CP4D and watsonx.ai\\n    - Pending approval process\\n- Potential Proxy Configuration Error\\n    - Prepared code changes for `create_cluster_step_2.sh` next session\\n\\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n        - Deploy watsonx.ai"},{"id":"flight-log-9","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-9","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-25-cocreate.mdx","title":"Log 9 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-25T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":2.37,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 9 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-9","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 10 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-10"},"nextItem":{"title":"Log 8 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-8"}},"content":"## Objective\\nDeploy watsonx.ai on self-managed AWS infrastructure for customer software evaluation\\n\\n```mermaid\\nflowchart LR\\n    A(Deploy bootnode)\\n    subgraph \\"You are here\\"\\n    B(Deploy infrastructure)\\n    end\\n    A --\x3eB\\n    B --\x3eC(Deploy OCP)\\n    C --\x3e D(Prepare CP4D & watsonx ai cartdridge)\\n    D --\x3eE(Install CP4D)\\n    E --\x3eF(Deploy watsonx.ai)\\n```\\n\\n## Milestones\\n1. Deploy and configuration of boot node to establish a beach-head into the customer AWS environment\\n    - Complete\\n2. Deploy OCP using the documented UPI installation steps\\n    - In progress\\n3. Install Cloud Pak for Data\\n4. Deploy and configure watsonx.ai on self-managed AWS infrastructure\\n\\n## Today\'s Accomplishments\\n- Configuration of the boot node\\n    - Installation of prerequisite software onto the boot node\\n    - Created and started local registry\\n    - Generated CA certrificate for PKI architecture\\n- Completion of step 1 of 2 of the deployment script\\n\\n## Lessons Learned\\n- Storage insufficient on the bootnode for downloaded images, 400gb minimum required\\n    - Mitigation: We increased the boot disk size to 500 gig via the AWS console for the EC2 instance. We then grew the disk and grew the filesystem\\n    - This needs to be added as a prereq\\n- There was a constraint in the `sg-lb-template.yaml` requiring subnets sized from /16  o /24. We removed that constraint\\n- Edited `bootstrap-template.yaml` line 91 to remove the wrong key name. (artifact from testing)\\n- Software Evaluation process - define and build internal documentation - TBD\\n- Documentation updates\\n    - Parameter definitions - making them more descriptive\\n- Validation checks\\n    - Creating a validation process before runniing any scripts/installs checking for prerequisites\\n\\n## Decisions and Action Items (DAI)\\n- AWS CLI had a previous installation. Had to manually remove that installation and re-run the aws cli install command.\\n- We decided to run the installation as root user. Root user needed to have the `/usr/local/bin` added to the PATH. Did this manually on the fly with an `export` command.\\n- Customer security to approve selected AMI for coreOS\\n  - The AMI for CoreOS is a public AMI. The customer security team needs to copy it into the dev account as public AMI\'s are blocked in this environment\\n \\n## Next Steps\\n- License and configure Cloud Pak for Data\\n    - Cloud Pak Considerations\\n        - Security scans needed on container images \\n        - Customer has no OpenShift experience \\n        - Customer requires on-prem, offline install\\n        - Customer uses their own container registry that might introduce extra effort or compatability issues \\n        - Version compatibility with OpenShift (e.g. 4.10 required and customer has 4.11) \\n        - Supported storage not available \\n        - Multiple cloudpaks on the same cluster \\n        - custom connections to data sources not supported OOTB \\n        - AWS-specific: IAM users required for install/deploy and are not allowed \\n        - OpenShift specific: CoreOS requirement for control nodes \\n        - Automatic updating of Cloud Pak, this can interrupt engagements (solution is to always remove update polling from operators)\\n- Deploy watsonx.ai"},{"id":"flight-log-8","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-8","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-22-cocreate.mdx","title":"Log 8 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-22T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.855,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 8 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-8","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 9 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-9"},"nextItem":{"title":"Log 7 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-7"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n**AWS**\\n- Fixes to cluster-sts.yaml and other deployment resources.\\n    - Fixed error in cluster-sts.yml by commenting out lines 590-599.\\n    - Changed ``IamInstanceProfile: !Ref BootnodeInstanceProfile`` to ``IamInstanceProfile: <InstanceProfileName>``\\n    - Changed ``SubnetId: !Ref PublicSubnet1ID``  to ``SubnetId: <PrivateSubnetID>`` to account for private deployments\\n    - Updated LambdaExecutionRole.json line 14: from ``ec2.aws.com`` to ``lambda.aws.com`` and added ``cloudformation.aws.com`` of allowed services.\\n    - Fixed LambdaExecutionRole ARN to proper role name.\\n    - Commented out ```/bin/bash ./cp-deploy.sh env apply -e env_id=${ClusterName} [--accept-all-licenses]```\\n    - Added VPC and Subnet IDs to the \u201cCleanupLambda\u201d  lambda function in cluster-sts, which then required adding \u201cec2:CreateNetworkInterface\u201d permission to LambdaExecutionRole\\n    - Adding tags to CleanupLambda with Application IDs.\\n- Successful deployment of BootNode instance.\\n\\n\\n\\n**RAG**\\n- Creation of cronjob to capture logs from Python app.\\n- Enabled metadata insertion into chunks in vector store -> (hopefully) increases retrieval accuracy\\n- Return context to user (shows sources used to generate responses)\\n- Added mixtral model support\\n- Enable functionality for user to give custom rag parameters\\n- Migrated vector DB from FAISS to chromaDB to enable the metadata functionality\\n- Script written to easily test rag implementation and save results in csv\\n- Implemented cache logic to make sure it considers combination of parameters as well before chosing to send a cached response\\n- Added better logic for caching to improve performance \\n- Remove unwanted parameters from request body\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n- Updating solution docs with better asset linking.\\n- Exploring WatsonX Discovery \\n\\n\\n\\n## Next Steps\\n- Continue over the shoulder working sessions\\n    - Kick off CloudFormation template install with updated STS templates.\\n- Compilation of required endpoints\\n- Deploy latest RAG version on AWS\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n- Kick off Cloud Pak for Deployment entitlement key.\\n- Build RAG application using WatsonX Discovery.\\n- Compare WatsonX Discovery RAG with existing RAG results.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template.\\n- Red Hat CoreOS AMI pending approval.\\n- LambdaCleanup error from not being able to assume role.\\n- Double checking role names in Cloudformation template."},{"id":"flight-log-7","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-7","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-20-cocreate.mdx","title":"Log 7 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-20T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.285,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 7 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-7","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 8 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-8"},"nextItem":{"title":"Log 6 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-6"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n**AWS**\\n- Shift from CP Deployer to OpenShift UPI deployment.\\n- Artifactory proxy details procured.\\n- Discussion of on-site logistics\\n- RHEL 8 AMI changed for BootNode.\\n\\n\\n**RAG**\\n- Creation of cronjob to capture logs from Python app.\\n- Enabled metadata insertion into chunks in vector store -> (hopefully) increases retrieval accuracy\\n- Return context to user (shows sources used to generate responses)\\n- Added mixtral model support\\n- Enable functionality for user to give custom rag parameters\\n- Migrated vector DB from FAISS to chromaDB to enable the metadata functionality\\n- Script written to easily test rag implementation and save results in csv\\n- Implemented cache logic to make sure it considers combination of parameters as well before chosing to send a cached response\\n\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n- Updating solution docs with better asset linking.\\n\\n\\n\\n## Next Steps\\n- Setup bootnode with necessary downloads and resources.\\n- Creation of IAM Role request creation Cloudformation templates.\\n- Kick off on-site over the shoulder working sessions.\\n- Collating information and resources to be created via OpenShift UPI deployment.\\n- Setup Artifactory proxy.\\n- Kick off Cloud Pak for Deployment entitlement key.\\n- Deploy latest RAG version on AWS\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template.\\n- Red Hat CoreOS AMI still pending approval."},{"id":"flight-log-6","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-6","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-18-cocreate.mdx","title":"Log 6 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-18T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.675,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 6 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-6","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 7 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-7"},"nextItem":{"title":"Log 5 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-5"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n**AWS**\\n- Fixes to cluster-sts.yaml and other deployment resources.\\n    - Fixed error in cluster-sts.yml by commenting out lines 590-599.\\n    - Changed ``IamInstanceProfile: !Ref BootnodeInstanceProfile`` to ``IamInstanceProfile: <InstanceProfileName>``\\n    - Changed ``SubnetId: !Ref PublicSubnet1ID``  to ``SubnetId: <PrivateSubnetID>`` to account for private deployments\\n    - Updated LambdaExecutionRole.json line 14: from ``ec2.aws.com`` to ``lambda.aws.com`` and added ``cloudformation.aws.com`` of allowed services.\\n    - Fixed LambdaExecutionRole ARN to proper role name.\\n    - Commented out ```/bin/bash ./cp-deploy.sh env apply -e env_id=${ClusterName} [--accept-all-licenses]```\\n    - Added VPC and Subnet IDs to the \u201cCleanupLambda\u201d  lambda function in cluster-sts, which then required adding \u201cec2:CreateNetworkInterface\u201d permission to LambdaExecutionRole\\n    - Adding tags to CleanupLambda with Application IDs.\\n- Successful deployment of BootNode instance.\\n\\n\\n\\n**RAG**\\n- Creation of cronjob to capture logs from Python app.\\n- Enabled metadata insertion into chunks in vector store -> (hopefully) increases retrieval accuracy\\n- Return context to user (shows sources used to generate responses)\\n- Added mixtral model support\\n- Enable functionality for user to give custom rag parameters\\n- Migrated vector DB from FAISS to chromaDB to enable the metadata functionality\\n- Script written to easily test rag implementation and save results in csv\\n- Implemented cache logic to make sure it considers combination of parameters as well before chosing to send a cached response\\n\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n- Updating solution docs with better asset linking.\\n\\n\\n\\n## Next Steps\\n- Continue over the shoulder working sessions\\n    - Kick off CloudFormation template install with updated STS templates.\\n- Compilation of required endpoints\\n- Deploy latest RAG version on AWS\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n- Kick off Cloud Pak for Deployment entitlement key.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template.\\n- Red Hat CoreOS AMI pending approval.\\n- LambdaCleanup error from not being able to assume role.\\n- Double checking role names in Cloudformation template."},{"id":"flight-log-5","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-5","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-15-cocreate.mdx","title":"Log 5 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-15T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.16,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 5 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-5","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 6 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-6"},"nextItem":{"title":"Log 4 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-4"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n**AWS**\\n- Populated parameter overrides JSON.\\n- Created RH Trial account and uploaded pull secret to S3 bucket.\\n- Updated CloudFormation STS template with permissions to create and assume Role with respective JSON versions.\\n\\n\\n\\n**RAG**\\n- Creation of cronjob to capture logs from Python app.\\n- Enabled metadata insertion into chunks in vector store -> (hopefully) increases retrieval accuracy\\n- Return context to user (shows sources used to generate responses)\\n- Added mixtral model support\\n- Enable functionality for user to give custom rag parameters\\n- Migrated vector DB from FAISS to chromaDB to enable the metadata functionality\\n- Script written to easily test rag implementation and save results in csv\\n- Implemented cache logic to make sure it considers combination of parameters as well before chosing to send a cached response\\n\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n- Updating solution docs with better asset linking.\\n\\n\\n\\n## Next Steps\\n- Continue over the shoulder working sessions\\n    - Kick off CloudFormation template install with updated STS templates.\\n- Compilation of required endpoints\\n- Deploy latest RAG version on AWS\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template.\\n- CoreOS AMI pending approval."},{"id":"flight-log-4","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-4","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-13-cocreate.mdx","title":"Log 4 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-13T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.195,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 4 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-4","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 5 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-5"},"nextItem":{"title":"Log 3 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-3"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n**AWS**\\n- Reviewed list of missing values able to be added to role via Policy\\n- Sent parameter overrides list to be populated for CloudFormation template installation.\\n- Creation of three separate CloudFormation template Roles.\\n- Updated CloudFormation templates to use STS.\\n\\n\\n**RAG**\\n- Creation of cronjob to capture logs from Python app.\\n- Enabled metadata insertion into chunks in vector store -> (hopefully) increases retrieval accuracy\\n- Return context to user (shows sources used to generate responses)\\n- Added mixtral model support\\n- Enable functionality for user to give custom rag parameters\\n- Migrated vector DB from FAISS to chromaDB to enable the metadata functionality\\n- Script written to easily test rag implementation and save results in csv\\n- Implemented cache logic to make sure it considers combination of parameters as well before chosing to send a cached response\\n\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n\\n\\n\\n## Next Steps\\n- Continue over the shoulder working sessions\\n    - Kick off CloudFormation template install\\n- Compilation of required endpoints\\n- Fill out required network values required for OCP deployment. \\n- Deploy latest RAG version on AWS\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template.\\n- Getting access to CoreOS AMI."},{"id":"flight-log-3","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-3","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-11-cocreate.mdx","title":"Log 3 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-11T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.915,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 3 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-3","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 4 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-4"},"nextItem":{"title":"Log 2 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-2"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n**AWS**\\n- Discovery of AWS DevOps role to be used and augmented with permissions.\\n- Adjusted check-permissions.sh script to account for profile to be passed.\\n- Creation of Cloudformation templates for roles with permissions needed for install.\\n    - Added --profile and $PROFILE_NAME\\n- Adjusted Cloudformation templates to account for roles instead of a user.\\n  \\n**RAG**\\n- App deployed on Fyre VM\\n- Support for granitev2/llama2 70 b chat models added.\\n- Watsonx Assistant Configured to interact with app via API for easier testing.\\n\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n- Test out RAG new chunking method.\\n\\n\\n\\n## Next Steps\\n- Continue over the shoulder working sessions\\n- Compilation of required endpoints\\n- Fill out required network values required for OCP deployment.\\n- Add Mixtral model to RAG.  \\n- Deploy latest RAG version on AWS\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template."},{"id":"flight-log-2","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-2","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-03-08-cocreate.mdx","title":"Log 2 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-03-08T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":1.115,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 2 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-2","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 3 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-3"},"nextItem":{"title":"Log 1 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-1"}},"content":"## Objectives\\n\\n- [Deploy watsonx.ai on self-managed AWS infrastructure.](https://ibm.monday.com/boards/6058549193)\\n\\n## Accomplishments\\n**AWS**\\n- [Established cocreation working cadence and cocreation point of contact.](https://ibm.monday.com/boards/6058549193/pulses/6163634479)\\n- Provided list of required Role permissions.\\n- [Successful deployment of OCP, CP4D via Cloudformation template via Console](https://ibm.monday.com/boards/6058549193/pulses/6138383385) with the following:\\n    - Creation of 3 Public and 3 Public Subnets and NAT gateways via Cloudformation template\\n    - 3x m5.2xlarge master nodes\\n    - 6x m6i.8xlarge worker nodes\\n- Successful deployment of Cloudformation template via CLI using:\\n    - A parameter overrides json file\\n    - Tested only the necessary required permissions for deployment\\n- Created cloudformation template to create a role with exact permissions to run Cloudformation deployment.\\n- Tagging of resources created by Cloudformation template.\\n  \\n**RAG**\\n- App deployed on Fyre VM\\n- Support for granitev2/llama2 70 b chat models added.\\n- Watsonx Assistant Configured to interact with app via API for easier testing.\\n\\n\\n\\n## In Progress\\n- End-to-end deployment of OCP, CP4D, and watsonx.ai (with GPU node)\\n- Tagging cp-deployer.sh generated resources.\\n- Test out RAG new chunking method.\\n\\n\\n## Next Steps\\n- Begin over the shoulder working sessions\\n- Compilation of required endpoints\\n- [Add Mixtral model to RAG](https://ibm.monday.com/boards/6058549193/pulses/6221674788).  \\n- [Deploy latest RAG version on AWS](https://ibm.monday.com/boards/6058549193/pulses/6080003563).\\n- Build out actions & flow in Watsonx Assistant after properly defining personas & objectives.\\n\\n\\n## Tracking (Issues)\\n- Require sign-off on final CloudFormation template."},{"id":"flight-log-1","metadata":{"permalink":"/solution-wxai-aws/blog/flight-log-1","editUrl":"https://github.com/ibm-client-engineering/solution-wxai-aws/edit/main/${blogDirPath}/${blogPath}","source":"@site/flight-logs/2024-02-29-cocreate.mdx","title":"Log 1 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","date":"2024-02-29T00:00:00.000Z","tags":[{"label":"log","permalink":"/solution-wxai-aws/blog/tags/log"}],"readingTime":0.615,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Log 1 \ud83d\udeeb","description":"Flight Log of Co-Creation Activities","slug":"flight-log-1","tags":["log"]},"unlisted":false,"prevItem":{"title":"Log 2 \ud83d\udeeb","permalink":"/solution-wxai-aws/blog/flight-log-2"}},"content":"## Objectives\\n\\n- Deploy watsonx.ai on self-managed AWS infrastructure.\\n\\n## Accomplishments\\n- Established this GitHub repository as single source of truth for architecture, IaC, and documentation to collaborate with stakeholders.\\n- Developed draft CloudFormation template to provision AWS resources.\\n- Started incorporating STS into CloudFormation.\\n\\n## In Progress\\n- Awaiting approval for AWS credits to cover infrastructure costs. Following up to expedite.\\n- Finalizing deployment plan and cadence.\\n\\n## Next Steps\\n- Review deployment details in working session with stakeholders.\\n- Incorporate additional feedback into documentation and IaC templates.\\n- Upon AWS credit approval and stakeholder sign-off, begin provisioning.\\n\\n## Tracking (Issues)\\n- Need confirmation of AWS credit approval.\\n- Require sign-off on final CloudFormation template.\\n- Align on deployment cadence with customer."}]}}')}}]);