"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5368],{4540:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(4848),a=s(8453);const i={id:"CP4D",sidebar_position:1,title:"Cloud Pak for Data Installation",custom_edit_url:null},r=void 0,o={id:"Deployment/Software/CP4D",title:"Cloud Pak for Data Installation",description:"Installing Multicloud Object Gateway",source:"@site/docs/2-Deployment/3-Software/1-CP4D.mdx",sourceDirName:"2-Deployment/3-Software",slug:"/Deployment/Software/CP4D",permalink:"/solution-wxai-aws/Deployment/Software/CP4D",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"CP4D",sidebar_position:1,title:"Cloud Pak for Data Installation",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Software",permalink:"/solution-wxai-aws/software"},next:{title:"Watsonx ai installation",permalink:"/solution-wxai-aws/Deployment/Software/WXAI"}},c={},l=[{value:"Installing Multicloud Object Gateway",id:"installing-multicloud-object-gateway",level:2},{value:"Install Object Data Foundation operator",id:"install-object-data-foundation-operator",level:3},{value:"Procedure to install OpenShift Data Foundation operator  <strong>Cribbed from the RHEL Docs</strong>",id:"procedure-to-install-openshift-data-foundation-operator--cribbed-from-the-rhel-docs",level:4},{value:"Verification steps for ODF Operator",id:"verification-steps-for-odf-operator",level:4},{value:"Creating a standalone Multicloud Object Gateway",id:"creating-a-standalone-multicloud-object-gateway",level:4},{value:"Verifying that the OpenShift Data Foundation cluster is healthy",id:"verifying-that-the-openshift-data-foundation-cluster-is-healthy",level:5},{value:"Verifying the state of the pods",id:"verifying-the-state-of-the-pods",level:5},{value:"Installing CP4D Cli",id:"installing-cp4d-cli",level:2},{value:"Download binary",id:"download-binary",level:3},{value:"Configure environmental vars",id:"configure-environmental-vars",level:3},{value:"Login to the cluster with cpd-cli",id:"login-to-the-cluster-with-cpd-cli",level:3},{value:"Add the entitlement key",id:"add-the-entitlement-key",level:3},{value:"Create required secrets for Services",id:"create-required-secrets-for-services",level:3},{value:"Installing CP4D",id:"installing-cp4d",level:2},{value:"Preparing the cluster nodes",id:"preparing-the-cluster-nodes",level:3},{value:"Authorizing instances",id:"authorizing-instances",level:3},{value:"Installation of shared components",id:"installation-of-shared-components",level:3},{value:"Setup instance topology",id:"setup-instance-topology",level:3},{value:"Installation of primary CPD components",id:"installation-of-primary-cpd-components",level:3},{value:"Installing Red Hat OpenShift Serverless Knative Eventing",id:"installing-red-hat-openshift-serverless-knative-eventing",level:3},{value:"Authorize the projects where the software will be installed to communicate",id:"authorize-the-projects-where-the-software-will-be-installed-to-communicate",level:4},{value:"Install the IBM Events Operator in the ibm-knative-events project",id:"install-the-ibm-events-operator-in-the-ibm-knative-events-project",level:4},{value:"Finally installing the OSKE",id:"finally-installing-the-oske",level:4},{value:"Installing the Cloud Pak for Data control plane and services",id:"installing-the-cloud-pak-for-data-control-plane-and-services",level:3},{value:"Generate a cpd-cli Profile",id:"generate-a-cpd-cli-profile",level:3},{value:"Installing our Cartridges",id:"installing-our-cartridges",level:2},{value:"Apply necessary Security Constraints",id:"apply-necessary-security-constraints",level:3},{value:"Watsonx Assistant",id:"watsonx-assistant",level:3},{value:"Apply the olm",id:"apply-the-olm",level:4},{value:"Validate the installation",id:"validate-the-installation",level:4},{value:"Create an instance of WA",id:"create-an-instance-of-wa",level:4},{value:"Create the service instance from the payload file:",id:"create-the-service-instance-from-the-payload-file",level:4},{value:"Validating that the service instance was created",id:"validating-that-the-service-instance-was-created",level:4},{value:"Watson Discovery",id:"watson-discovery",level:3},{value:"Apply the olm",id:"apply-the-olm-1",level:4},{value:"Validate the installation",id:"validate-the-installation-1",level:4},{value:"Create an instance of WD",id:"create-an-instance-of-wd",level:4},{value:"OpenPages",id:"openpages",level:3},{value:"Watson Studio",id:"watson-studio",level:3},{value:"Watson Machine Learning",id:"watson-machine-learning",level:3},{value:"IBM Knowledge Catalog",id:"ibm-knowledge-catalog",level:3},{value:"Watsonx Orchestrate",id:"watsonx-orchestrate",level:3},{value:"IBM App Connect",id:"ibm-app-connect",level:4},{value:"Installing Watsonx Orchestrate",id:"installing-watsonx-orchestrate",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"installing-multicloud-object-gateway",children:"Installing Multicloud Object Gateway"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"Associated links with this section"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=software-installing-multicloud-object-gateway",children:"Multicloud Object Gateway in CP4D"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://access.redhat.com/documentation/en-us/red_hat_openshift_data_foundation/4.15/html/deploying_openshift_data_foundation_using_amazon_web_services/deploy-standalone-multicloud-object-gateway",children:"Installing Multicloud Object Gateway"})})]}),"\n",(0,t.jsx)(n.p,{children:"Multicloud Object Gateway is required for the following CP4D components:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"watsonx Assistant"}),"\n",(0,t.jsx)(n.li,{children:"Watson Discovery"}),"\n",(0,t.jsx)(n.li,{children:"Watson Speech services"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"install-object-data-foundation-operator",children:"Install Object Data Foundation operator"}),"\n",(0,t.jsx)(n.p,{children:"Open the console of your OCP instance. This can be retrieved with the following commandline:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc whoami --show-console\n\nhttps://console-openshift-console.apps.wxai.cpdu8vscs.ibmworkshops.com\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Open the URL returned in a browser window and use the ",(0,t.jsx)(n.code,{children:"kubeadmin"})," user and the password from the generated auth directory to login."]}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"As of this writing, in ODF 4.14.x and higher the noobaa backing store uses extended file attributes to store file metadata. This is not supported in EFS. So these instructions will encompass installing 4.13."}),(0,t.jsx)(n.p,{children:"Future releases of ODF may have that fix in it to support EFS."}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/noobaa/noobaa-core/issues/7843",children:"https://github.com/noobaa/noobaa-core/issues/7843"})})]}),"\n",(0,t.jsxs)(n.h4,{id:"procedure-to-install-openshift-data-foundation-operator--cribbed-from-the-rhel-docs",children:["Procedure to install OpenShift Data Foundation operator  ",(0,t.jsx)(n.strong,{children:"Cribbed from the RHEL Docs"})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Log in to the OpenShift Web Console."}),"\n",(0,t.jsx)(n.li,{children:"Click Operators \u2192 OperatorHub."}),"\n",(0,t.jsx)(n.li,{children:"Scroll or type OpenShift Data Foundation into the Filter by keyword box to find the OpenShift Data Foundation Operator."}),"\n",(0,t.jsx)(n.li,{children:"Click Install."}),"\n",(0,t.jsxs)(n.li,{children:["Set the following options on the Install Operator page:\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Update Channel as ",(0,t.jsx)(n.strong,{children:"stable-4.13"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Installation Mode as ",(0,t.jsx)(n.strong,{children:"A specific namespace on the cluster."})]}),"\n",(0,t.jsxs)(n.li,{children:["Installed Namespace as ",(0,t.jsx)(n.strong,{children:"Operator recommended namespace openshift-storage"}),". If Namespace ",(0,t.jsx)(n.code,{children:"openshift-storage"})," does not exist, it is created during the operator installation."]}),"\n",(0,t.jsxs)(n.li,{children:["Select Approval Strategy as ",(0,t.jsx)(n.strong,{children:"Automatic"})," or ",(0,t.jsx)(n.strong,{children:"Manual"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["If you select ",(0,t.jsx)(n.strong,{children:"Automatic"})," updates, then the Operator Lifecycle Manager (OLM) automatically upgrades the running instance of your Operator without any intervention."]}),"\n",(0,t.jsxs)(n.li,{children:["If you select ",(0,t.jsx)(n.strong,{children:"Manual"})," updates, then the OLM creates an update request. As a cluster administrator, you must then manually approve that update request to update the Operator to a newer version."]}),"\n",(0,t.jsxs)(n.li,{children:["Ensure that the ",(0,t.jsx)(n.strong,{children:"Enable"})," option is selected for the ",(0,t.jsx)(n.strong,{children:"Console plugin"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.strong,{children:"Install"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"verification-steps-for-odf-operator",children:"Verification steps for ODF Operator"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["After the operator is successfully installed, a pop-up with a message, ",(0,t.jsx)(n.code,{children:"Web console update is available"})," appears on the user interface. Click ",(0,t.jsx)(n.strong,{children:"Refresh web console"})," from this pop-up for the console changes to reflect."]}),"\n",(0,t.jsxs)(n.li,{children:["In the Web Console:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigate to Installed Operators and verify that the ",(0,t.jsx)(n.strong,{children:"OpenShift Data Foundation Operator"})," shows a green tick indicating successful installation."]}),"\n",(0,t.jsxs)(n.li,{children:["Navigate to ",(0,t.jsx)(n.strong,{children:"Storage"})," and verify if the ",(0,t.jsx)(n.strong,{children:"Data Foundation"})," dashboard is available."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"creating-a-standalone-multicloud-object-gateway",children:"Creating a standalone Multicloud Object Gateway"}),"\n",(0,t.jsx)(n.p,{children:"You can create only the standalone Multicloud Object Gateway component while deploying OpenShift Data Foundation."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure that the OpenShift Data Foundation Operator is installed."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Procedure"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["In the OpenShift Web Console, click ",(0,t.jsx)(n.strong,{children:"Operators \u2192 Installed Operators"})," to view all the installed operators.\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Ensure that the Project selected is ",(0,t.jsx)(n.code,{children:"openshift-storage"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.strong,{children:"OpenShift Data Foundation"})," operator and then click ",(0,t.jsx)(n.strong,{children:"Create StorageSystem."})]}),"\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"Backing storage"})," page, select the following:\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Select ",(0,t.jsx)(n.strong,{children:"Multicloud Object Gateway"})," for ",(0,t.jsx)(n.strong,{children:"Deployment type"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.strong,{children:"Use an existing StorageClass"})," option."]}),"\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.strong,{children:"Next"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"Review and create"})," page, review the configuration details:\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["To modify any configuration settings, click ",(0,t.jsx)(n.strong,{children:"Back"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.strong,{children:"Create StorageSystem"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Verification steps"})}),"\n",(0,t.jsx)(n.h5,{id:"verifying-that-the-openshift-data-foundation-cluster-is-healthy",children:"Verifying that the OpenShift Data Foundation cluster is healthy"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["In the OpenShift Web Console, click ",(0,t.jsx)(n.strong,{children:"Storage \u2192 Data Foundation."})]}),"\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"Status"})," card of the ",(0,t.jsx)(n.strong,{children:"Overview"})," tab, click ",(0,t.jsx)(n.strong,{children:"Storage System"})," and then click the storage system link from the pop up that appears.\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"Status"})," card of the ",(0,t.jsx)(n.strong,{children:"Object"})," tab, verify that both ",(0,t.jsx)(n.em,{children:"Object Service"})," and ",(0,t.jsx)(n.em,{children:"Data Resiliency"})," have a green tick."]}),"\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"Details"})," card, verify that the MCG information is displayed."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"verifying-the-state-of-the-pods",children:"Verifying the state of the pods"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.strong,{children:"Workloads \u2192 Pods"})," from the OpenShift Web Console."]}),"\n",(0,t.jsxs)(n.li,{children:["Select ",(0,t.jsx)(n.code,{children:"openshift-storage"})," from the ",(0,t.jsx)(n.strong,{children:"Project"})," drop-down list and verify pods are in Running state."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installing-cp4d-cli",children:"Installing CP4D Cli"}),"\n",(0,t.jsx)(n.h3,{id:"download-binary",children:"Download binary"}),"\n",(0,t.jsx)(n.p,{children:"CP4D CLI can be found at the following link."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IBM/cpd-cli/releases/download/v13.1.4/cpd-cli-linux-EE-13.1.4.tgz",children:"https://github.com/IBM/cpd-cli/releases/download/v13.1.4/cpd-cli-linux-EE-13.1.4.tgz"})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"This binary is for linux, if running from a windows machine, please use the linux binary but run it from Windows Subsystem for Linux."}),(0,t.jsx)(n.p,{children:"Also as of this writing the latest version of the cli is 13.1.4."})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"wget https://github.com/IBM/cpd-cli/releases/download/v13.1.4/cpd-cli-linux-EE-13.1.4.tgz\n"})}),"\n",(0,t.jsx)(n.p,{children:"Extract the files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"tar xzvf https://github.com/IBM/cpd-cli/releases/download/v13.1.4/cpd-cli-linux-EE-13.1.4.tgz\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will create the following directory:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli-linux-EE-13.1.4-109\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configure-environmental-vars",children:"Configure environmental vars"}),"\n",(0,t.jsx)(n.p,{children:"The following creates a CPD env file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'cat<<EOF> cpd_vars_48.sh\n#===============================================================================\n\n# Cloud Pak for Data installation variables\n\n#===============================================================================\n\n  \n\n# ------------------------------------------------------------------------------\n# Client workstation\n# ------------------------------------------------------------------------------\n\n# Set the following variables if you want to override the default behavior of the Cloud Pak for Data CLI.\n#\n# To export these variables, you must uncomment each command in this section.\n# export CPD_CLI_MANAGE_WORKSPACE=<enter a fully qualified directory>\n# export OLM_UTILS_LAUNCH_ARGS=<enter launch arguments>\n\n# ------------------------------------------------------------------------------\n# Cluster\n# ------------------------------------------------------------------------------\n\nexport OCP_URL=<enter your Red Hat OpenShift Container Platform URL>\nexport OPENSHIFT_TYPE=self-managed\nexport IMAGE_ARCH=amd64\nexport OCP_USERNAME=kubeadmin\nexport OCP_PASSWORD=<enter your password>\nexport SERVER_ARGUMENTS="--server=${OCP_URL}"\nexport CPDM_OC_LOGIN="cpd-cli manage login-to-ocp ${SERVER_ARGUMENTS} ${LOGIN_ARGUMENTS}"\nexport OC_LOGIN="oc login ${OCP_URL} ${LOGIN_ARGUMENTS}"\n\n# export OCP_TOKEN=<enter your token>\n# export LOGIN_ARGUMENTS="--username=${OCP_USERNAME} --password=${OCP_PASSWORD}"\n# export LOGIN_ARGUMENTS="--token=${OCP_TOKEN}"\n\n# ------------------------------------------------------------------------------\n\n# Projects\n\n# ------------------------------------------------------------------------------\n\nexport PROJECT_CERT_MANAGER=ibm-cert-manager\nexport PROJECT_LICENSE_SERVICE=ibm-license-server\nexport PROJECT_SCHEDULING_SERVICE=ibm-scheduler\nexport PROJECT_CPD_INST_OPERATORS=cpd-operators\nexport PROJECT_CPD_INST_OPERANDS=cpd\n\n# export PROJECT_IBM_EVENTS=<enter your IBM Events Operator project>\n# export PROJECT_PRIVILEGED_MONITORING_SERVICE=<enter your privileged monitoring service project>\n# export PROJECT_CPD_INSTANCE_TETHERED=<enter your tethered project>\n# export PROJECT_CPD_INSTANCE_TETHERED_LIST=<a comma-separated list of tethered projects>\n\n# ------------------------------------------------------------------------------\n# Storage\n# ------------------------------------------------------------------------------\n\nexport STG_CLASS_BLOCK=nfs-client\nexport STG_CLASS_FILE=nfs-client\n\n# ------------------------------------------------------------------------------\n# IBM Entitled Registry\n# ------------------------------------------------------------------------------\n\nexport IBM_ENTITLEMENT_KEY=<enter your IBM entitlement API key>\n\n# ------------------------------------------------------------------------------\n# Private container registry\n# ------------------------------------------------------------------------------\n\n# Set the following variables if you mirror images to a private container registry.\n#\n# To export these variables, you must uncomment each command in this section. \n\n# export PRIVATE_REGISTRY_LOCATION=<enter the location of your private container registry>\n# export PRIVATE_REGISTRY_PUSH_USER=<enter the username of a user that can push to the registry>\n# export PRIVATE_REGISTRY_PUSH_PASSWORD=<enter the password of the user that can push to the registry>\n# export PRIVATE_REGISTRY_PULL_USER=<enter the username of a user that can pull from the registry>\n# export PRIVATE_REGISTRY_PULL_PASSWORD=<enter the password of the user that can pull from the registry>\n\n# ------------------------------------------------------------------------------\n# Extra stuff\n# ------------------------------------------------------------------------------\n\nexport NOOBAA_ACCOUNT_CREDENTIALS_SECRET=noobaa-admin\nexport NOOBAA_ACCOUNT_CERTIFICATE_SECRET=noobaa-s3-serving-cert\n\n# ------------------------------------------------------------------------------\n# Cloud Pak for Data version\n# ------------------------------------------------------------------------------\n\nexport VERSION=4.8.4\n\n# ------------------------------------------------------------------------------\n# Components\n# ------------------------------------------------------------------------------\n\n#export COMPONENTS=ibm-cert-manager,ibm-licensing,scheduler,cpfs,cpd_platform,ws,wml,openpages,wkc,watson_assistant\nexport COMPONENTS=ibm-cert-manager,ibm-licensing,scheduler,cpfs,cpd_platform\n\n\n# export COMPONENTS_TO_SKIP=<component-ID-1>,<component-ID-2>\n\n# ------------------------------------------------------------------------------\n# watsonx Orchestrate\n# ------------------------------------------------------------------------------\n\n# export PROJECT_IBM_APP_CONNECT=<enter your IBM App Connect in containers project>\n# export AC_CASE_VERSION=<version>\n# export AC_CHANNEL_VERSION=<version>\nEOF\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You will need to open the resultant ",(0,t.jsx)(n.code,{children:"cpd_vars_48.sh"})," file and update the following vars:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"OCP_URL\nOCP_PASSWORD\nIBM_ENTITLEMENT_KEY\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default we set our storage classes to the ",(0,t.jsx)(n.code,{children:"nfs-client"})," storage class. Your mileage may vary."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"OCP_URL"})," can be pulled with this command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc cluster-info\nKubernetes control plane is running at https://api.wxai.cpdu8vscs.ibmworkshops.com:6443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The kubeadmin password can be found in the build directory for the cluster under ",(0,t.jsx)(n.code,{children:"auth/kubeadmin-password"})]}),"\n",(0,t.jsx)(n.h3,{id:"login-to-the-cluster-with-cpd-cli",children:"Login to the cluster with cpd-cli"}),"\n",(0,t.jsx)(n.p,{children:"Source the env file"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"source cpd_vars_48.sh"})}),"\n",(0,t.jsx)(n.p,{children:"login with cpd-cli"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"add-the-entitlement-key",children:"Add the entitlement key"}),"\n",(0,t.jsxs)(n.p,{children:["The key can be retrieved from ",(0,t.jsx)(n.a,{href:"https://myibm.ibm.com/products-services/containerlibrary",children:"here"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage add-icr-cred-to-global-pull-secret \\\n--entitled_registry_key=${IBM_ENTITLEMENT_KEY}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"create-required-secrets-for-services",children:"Create required secrets for Services"}),"\n",(0,t.jsx)(n.p,{children:"If we're planning on installing the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Watsonx Assistant"}),"\n",(0,t.jsx)(n.li,{children:"Watson Discovery"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The names of all NooBaa account credentials can be retrieved with the following command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc get secrets -n openshift-storage | grep noobaa\n"})}),"\n",(0,t.jsx)(n.p,{children:"Running from our linux bastion host, we need to export the following secret names:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export NOOBAA_ACCOUNT_CREDENTIALS_SECRET=noobaa-admin\nexport NOOBAA_ACCOUNT_CERTIFICATE_SECRET=noobaa-s3-serving-cert\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the secrets that watsonx Assistant will use to connect to Multicloud Object Gateway:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-mcg \\\n--components=watson_assistant \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--noobaa_account_secret=${NOOBAA_ACCOUNT_CREDENTIALS_SECRET} \\\n--noobaa_cert_secret=${NOOBAA_ACCOUNT_CERTIFICATE_SECRET}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Verify the secrets were created"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc get secrets --namespace=${PROJECT_CPD_INST_OPERANDS} \\\nnoobaa-account-watson-assistant \\\nnoobaa-cert-watson-assistant \\\nnoobaa-uri-watson-assistant\n"})}),"\n",(0,t.jsx)(n.p,{children:"Should return"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"NAME                              TYPE     DATA   AGE\nnoobaa-account-watson-assistant   Opaque   2      33s\nnoobaa-cert-watson-assistant      Opaque   1      32s\nnoobaa-uri-watson-assistant       Opaque   3      29s\n"})}),"\n",(0,t.jsx)(n.p,{children:"Wash, rinse, repeat for Watson Discovery"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-mcg \\\n--components=watson_discovery \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--noobaa_account_secret=${NOOBAA_ACCOUNT_CREDENTIALS_SECRET}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"installing-cp4d",children:"Installing CP4D"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"Important links:"}),(0,t.jsxs)(n.p,{children:["This apparently is a requirement for watsonx Assistant\n",(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=software-installing-red-hat-openshift-serverless-knative-eventing",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=software-installing-red-hat-openshift-serverless-knative-eventing"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"preparing-the-cluster-nodes",children:"Preparing the cluster nodes"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"We need to patch the cluster with the following since the initial cluster creation with our scripts assumed a default private registry."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'oc patch OperatorHub cluster --type json -p \'[{"op": "add", "path": "/spec/disableAllDefaultSources", "value": false}]\'\n'})})]}),"\n",(0,t.jsx)(n.p,{children:"Processes derived from the following links"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=settings-changing-process-ids-limit",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=settings-changing-process-ids-limit"})}),"\n",(0,t.jsx)(n.p,{children:"To ensure that some services can run correctly, you might need to increase the process IDs limit setting on the OpenShift\xae Container Platform."}),"\n",(0,t.jsx)(n.p,{children:"Log into your bastion node and then login to the cluster and run the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc apply -f - << EOF\napiVersion: machineconfiguration.openshift.io/v1\nkind: KubeletConfig\nmetadata:\n  name: cpd-pidslimit-kubeletconfig\nspec:\n  kubeletConfig:\n    podPidsLimit: 16384\n  machineConfigPoolSelector:\n    matchExpressions:\n    - key: pools.operator.machineconfiguration.openshift.io/worker\n      operator: Exists\nEOF\n"})}),"\n",(0,t.jsx)(n.h3,{id:"authorizing-instances",children:"Authorizing instances"}),"\n",(0,t.jsx)(n.p,{children:"This step creates all required projects, creates the NamespaceScope operator in the operators project, and binds the applied role to the service account of the NamespaceScope operator."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage authorize-instance-topology \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"This was successful"})}),"\n",(0,t.jsx)(n.h3,{id:"installation-of-shared-components",children:"Installation of shared components"}),"\n",(0,t.jsxs)(n.p,{children:["These two tasks come from here:\n",(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=cluster-installing-shared-components",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=cluster-installing-shared-components"})]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["If you are unable to access github, include the following flags to the next two commands as well as ",(0,t.jsx)(n.em,{children:"any"})," ",(0,t.jsx)(n.code,{children:"apply-olm"})," command below"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"--case_download=true \\\n--from_oci=true\n"})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cluster-components \\\n--release=${VERSION} \\\n--license_acceptance=true \\\n--cert_manager_ns=${PROJECT_CERT_MANAGER} \\\n--licensing_ns=${PROJECT_LICENSE_SERVICE}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Install the scheduler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-scheduler \\\n--release=${VERSION} \\\n--license_acceptance=true \\\n--scheduler_ns=${PROJECT_SCHEDULING_SERVICE}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setup-instance-topology",children:"Setup instance topology"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-instance-topology \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--license_acceptance=true \\\n--block_storage_class=${STG_CLASS_BLOCK}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"installation-of-primary-cpd-components",children:"Installation of primary CPD components"}),"\n",(0,t.jsx)(n.p,{children:"This installs the operators in the operators project for the instance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=${COMPONENTS}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"installing-red-hat-openshift-serverless-knative-eventing",children:"Installing Red Hat OpenShift Serverless Knative Eventing"}),"\n",(0,t.jsxs)(n.p,{children:["Red Hat OpenShift Serverless Knative Eventing and IBM Events are required for ",(0,t.jsx)(n.strong,{children:"watsonx Assistant"})]}),"\n",(0,t.jsx)(n.h4,{id:"authorize-the-projects-where-the-software-will-be-installed-to-communicate",children:"Authorize the projects where the software will be installed to communicate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage authorize-instance-topology \\\n--release=${VERSION} \\\n--cpd_operator_ns=ibm-knative-events \\\n--cpd_instance_ns=knative-eventing\n"})}),"\n",(0,t.jsx)(n.h4,{id:"install-the-ibm-events-operator-in-the-ibm-knative-events-project",children:"Install the IBM Events Operator in the ibm-knative-events project"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-instance-topology \\\n--release=${VERSION} \\\n--cpd_operator_ns=ibm-knative-events \\\n--cpd_instance_ns=knative-eventing \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"finally-installing-the-oske",children:"Finally installing the OSKE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage deploy-knative-eventing \\\n--release=${VERSION} \\\n--block_storage_class=${STG_CLASS_BLOCK}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"installing-the-cloud-pak-for-data-control-plane-and-services",children:"Installing the Cloud Pak for Data control plane and services"}),"\n",(0,t.jsx)(n.p,{children:"This installs the operands in the operands project for the instance:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=${COMPONENTS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is a big one, so it might take a little while. When it completes, verify the operands are up:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This should return a ",(0,t.jsx)(n.code,{children:"Completed"})," status."]}),"\n",(0,t.jsx)(n.p,{children:"The routes should be created and ready at this point. You can retrieve the web-url for the client with the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cpd-instance-details \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--get_admin_initial_credentials=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"generate-a-cpd-cli-profile",children:"Generate a cpd-cli Profile"}),"\n",(0,t.jsxs)(n.p,{children:["Log into the CP4D webui with the info retrieved from the ",(0,t.jsx)(n.code,{children:"get-cpd-instance-details"})," and go to your Profile and settings page in the Cloud Pak for Data client and clicking Generate API key."]}),"\n",(0,t.jsxs)(n.p,{children:["In the upper right hand corner, click ",(0,t.jsx)(n.code,{children:"API key"})," -> ",(0,t.jsx)(n.code,{children:"Generate new key"})]}),"\n",(0,t.jsx)(n.p,{children:"Copy the generated key."}),"\n",(0,t.jsx)(n.p,{children:"Collect the web client URL and export it with the following command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export CPD_PROFILE_URL=$(oc get route cpd --namespace=${PROJECT_CPD_INST_OPERANDS} | tail -1 | awk '{print \"https://\"$2}')\n"})}),"\n",(0,t.jsxs)(n.p,{children:["We'll set our ",(0,t.jsx)(n.code,{children:"profile-name"})," to the cluster name."]}),"\n",(0,t.jsx)(n.p,{children:"Set the following vars:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export API_KEY=<key you copied above>\nexport CPD_ADMIN_USER=cpadmin\nexport LOCAL_USER=<local user name>\nexport CPD_PROFILE_NAME=wxai\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create a local user configuration to store your username and API key by using the config users set command."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli config users set ${LOCAL_USER} \\\n--username ${CPD_ADMIN_USER} \\\n--apikey ${API_KEY}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create a profile to store the Cloud Pak for Data URL and to associate the profile with your local user configuration by using the config profiles set command."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli config profiles set ${CPD_PROFILE_NAME} \\\n--user ${LOCAL_USER} \\\n--url ${CPD_PROFILE_URL}\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can now run cpd-cli commands with this profile as shown in the following example."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli service-instance list \\\n--profile=${CPD_PROFILE_NAME}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"installing-our-cartridges",children:"Installing our Cartridges"}),"\n",(0,t.jsx)(n.p,{children:"Source the env file"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"source cpd_vars_48.sh"})}),"\n",(0,t.jsx)(n.p,{children:"Login with cpd-cli"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"apply-necessary-security-constraints",children:"Apply necessary Security Constraints"}),"\n",(0,t.jsx)(n.p,{children:"The apply-db2-kubelet command makes the following changes to the cluster nodes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'allowedUnsafeSysctls:\n  - "kernel.msg*"\n  - "kernel.shm*"\n  - "kernel.sem"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-db2-kubelet\n"})}),"\n",(0,t.jsx)(n.p,{children:"This might take a bit as the workers will be getting bounced."}),"\n",(0,t.jsx)(n.h3,{id:"watsonx-assistant",children:"Watsonx Assistant"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["By default the deployment size for WA is ",(0,t.jsx)(n.code,{children:"Production"}),". If we want to go with something larger, we need to deploy with an ",(0,t.jsx)(n.code,{children:"options"})," file."]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"install-options.yml"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"################################################################################\n# watsonx Assistant parameters\n################################################################################\nwatson_assistant_size: Production\nwatson_assistant_bigpv: false\nwatson_assistant_analytics_enabled: true\n"})}),(0,t.jsx)(n.p,{children:"The default Production size in this case is more the suited for our purposes."})]}),"\n",(0,t.jsx)(n.h4,{id:"apply-the-olm",children:"Apply the olm"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=watson_assistant\n"})}),"\n",(0,t.jsx)(n.p,{children:"And run the install command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=watson_assistant \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"validate-the-installation",children:"Validate the installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=watson_assistant\n"})}),"\n",(0,t.jsx)(n.h4,{id:"create-an-instance-of-wa",children:"Create an instance of WA"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-2",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-2"})}),"\n",(0,t.jsxs)(n.p,{children:["Set the INSTANCE_NAME environment variable to the unique name that you want to use as the display name for the service instance. We're just going to call this ",(0,t.jsx)(n.code,{children:"wa-instance"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'export INSTANCE_NAME="wa-instance"\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["You should have followed the steps ",(0,t.jsx)(n.a,{href:"/Deployment/Software/CP4D#generate-a-cpd-cli-profile",children:"here"})," to generate a profile."]}),(0,t.jsxs)(n.p,{children:["The example profile we created we called ",(0,t.jsx)(n.code,{children:"wxai"}),"."]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'export CPD_PROFILE_NAME="wxai"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Set the INSTANCE_VERSION env var to the version that corresponds to the version of CP4D. As of this writing and this guide, we are using 4.8.4. The Service instance version must match the release of CP4D."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export INSTANCE_VERSION=4.8.4\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the assistant-instance.json payload file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'cat << EOF > ./assistant-instance.json\n{\n    "addon_type": "assistant",\n    "display_name": "${INSTANCE_NAME}",\n    "namespace": "${PROJECT_CPD_INST_OPERANDS}",\n    "addon_version": "${INSTANCE_VERSION}",\n    "create_arguments": {\n        "deployment_id": "${PROJECT_CPD_INST_OPERANDS}-wa", \n\t     "parameters": { \n\t         "serviceId": "assistant", \n\t         "url": "https://wa-store.${PROJECT_CPD_INST_OPERANDS}.svc.cluster.local:443/csb/v2/service_instances", \n\t         "watson": true \n        }\n    }\n}\nEOF\n'})}),"\n",(0,t.jsx)(n.p,{children:"Set the PAYLOAD_FILE environment variable to the fully qualified name of the JSON payload file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export PAYLOAD_FILE=/path/to/whereever/this/file/is/assistant-instance.json\n"})}),"\n",(0,t.jsx)(n.h4,{id:"create-the-service-instance-from-the-payload-file",children:"Create the service instance from the payload file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli service-instance create \\\n--profile=${CPD_PROFILE_NAME} \\\n--from-source=${PAYLOAD_FILE}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"validating-that-the-service-instance-was-created",children:"Validating that the service instance was created"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli service-instance status ${INSTANCE_NAME} \\\n--profile=${CPD_PROFILE_NAME} \\\n--output=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"watson-discovery",children:"Watson Discovery"}),"\n",(0,t.jsx)(n.h4,{id:"apply-the-olm-1",children:"Apply the olm"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=watson_discovery\n"})}),"\n",(0,t.jsx)(n.p,{children:"And then apply the CR"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=watson_discovery \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"validate-the-installation-1",children:"Validate the installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=watson_discovery\n"})}),"\n",(0,t.jsx)(n.h4,{id:"create-an-instance-of-wd",children:"Create an instance of WD"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"TBD"})}),"\n",(0,t.jsx)(n.h3,{id:"openpages",children:"OpenPages"}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to create the required OLM objects for OpenPages in the operators project for the instance:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=openpages\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the custom resource for OpenPages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=openpages \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Validate the installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=openpages\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create a service instance"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-14",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-14"})}),"\n",(0,t.jsx)(n.h3,{id:"watson-studio",children:"Watson Studio"}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to create the required OLM objects for Watson Studio in the operators project for the instance:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=ws\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the custom resource"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=ws \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Validate the installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=ws\n"})}),"\n",(0,t.jsx)(n.h3,{id:"watson-machine-learning",children:"Watson Machine Learning"}),"\n",(0,t.jsx)(n.p,{children:"Apply the olm"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=wml\n"})}),"\n",(0,t.jsx)(n.p,{children:"Apply the CR"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=wml \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Verify the installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=ws\n"})}),"\n",(0,t.jsx)(n.h3,{id:"ibm-knowledge-catalog",children:"IBM Knowledge Catalog"}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to create the required OLM objects for IBM Knowledge Catalog in the operators project for the instance:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=wkc\n"})}),"\n",(0,t.jsx)(n.p,{children:"We're using default options for this installation, so kick off the following CR"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=wkc \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"watsonx-orchestrate",children:"Watsonx Orchestrate"}),"\n",(0,t.jsx)(n.h4,{id:"ibm-app-connect",children:"IBM App Connect"}),"\n",(0,t.jsx)(n.p,{children:"IBM App Connect is a requirement for Watsonx Orchestrate"}),"\n",(0,t.jsxs)(n.p,{children:["Make sure to set these vars in ",(0,t.jsx)(n.code,{children:"cpd_vars_48.sh"})]}),"\n",(0,t.jsx)(n.p,{children:"We are using CP4D 4.8.4, so the following vars are valid:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export PROJECT_IBM_APP_CONNECT=appconnect\nexport AC_CASE_VERSION=11.3.0\nexport AC_CHANNEL_VERSION=v11.3\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now source the ",(0,t.jsx)(n.code,{children:"cpd_vars_48.sh"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"source ./cpd_vars_48.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:"Download the IBM App Connect case file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"curl -sSLO https://github.com/IBM/cloud-pak/raw/master/repo/case/ibm-appconnect/${AC_CASE_VERSION}/ibm-appconnect-${AC_CASE_VERSION}.tgz\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You should have in your home directory ",(0,t.jsx)(n.code,{children:"ibm-appconnect-11.3.0.tgz"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Extract the file with"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"tar xvf ibm-appconnect-${AC_CASE_VERSION}.tgz\n"})}),"\n",(0,t.jsx)(n.p,{children:"Login to the cluster with cpd-cli"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the project for App Connect"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc new-project ${PROJECT_IBM_APP_CONNECT} --display-name 'IBM App Connect'\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the catalog source for the App Connect operator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'oc patch \\\n--filename=ibm-appconnect/inventory/ibmAppconnect/files/op-olm/catalog_source.yaml \\\n--type=merge \\\n-o yaml \\\n--patch="{\\"metadata\\":{\\"namespace\\":\\"${PROJECT_IBM_APP_CONNECT}\\"}}" \\\n--dry-run=client \\\n| oc apply -n ${PROJECT_IBM_APP_CONNECT} -f -\n'})}),"\n",(0,t.jsx)(n.p,{children:"Create the operator group for the App Connect operator:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cat <<EOF | oc apply -f -\n  apiVersion: operators.coreos.com/v1\n  kind: OperatorGroup\n  metadata:\n    name: appconnect-og\n    namespace: ${PROJECT_IBM_APP_CONNECT}\n  spec:\n    targetNamespaces:\n    - ${PROJECT_IBM_APP_CONNECT}\n    upgradeStrategy: Default\nEOF\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now create the subscription for the AC operator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'cat <<EOF | oc apply -f -\n  apiVersion: operators.coreos.com/v1alpha1\n  kind: Subscription\n  metadata:\n    name: ibm-appconnect-operator\n    namespace: ${PROJECT_IBM_APP_CONNECT}\n  spec:\n    channel: ${AC_CHANNEL_VERSION}\n    config:\n      env:\n      - name: ACECC_ENABLE_PUBLIC_API\n        value: "true"\n    installPlanApproval: Automatic\n    name: ibm-appconnect\n    source: appconnect-operator-catalogsource\n    sourceNamespace: ${PROJECT_IBM_APP_CONNECT}\nEOF\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now wait for the operator to come online"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc wait csv \\\n--namespace=${PROJECT_IBM_APP_CONNECT} \\\n--selector=operators.coreos.com/ibm-appconnect.${PROJECT_IBM_APP_CONNECT}='' \\\n--for='jsonpath={.status.phase}'=Succeeded\n"})}),"\n",(0,t.jsx)(n.h4,{id:"installing-watsonx-orchestrate",children:"Installing Watsonx Orchestrate"}),"\n",(0,t.jsx)(n.p,{children:"Once the App Connect operator is up and running, we can move on to installing Watsonx Orchestrate"}),"\n",(0,t.jsxs)(n.p,{children:["source the ",(0,t.jsx)(n.code,{children:"cpd_vars_48.sh"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"source ./cpd_vars_48.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:"Login to the cluster with cpd-cli"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create an instance of App Connect for watsonx Orchestrate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-appconnect \\\n--appconnect_ns=${PROJECT_IBM_APP_CONNECT} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--release=${VERSION} \\\n--components=watsonx_orchestrate \\\n--file_storage_class=${STG_CLASS_FILE}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set the CPD_USERNAME environment variable to your Cloud Pak for Data username:"}),"\n",(0,t.jsxs)(n.p,{children:["This should be the cpd admin user you created when you ran the tasks ",(0,t.jsx)(n.a,{href:"/Deployment/Software/CP4D#generate-a-cpd-cli-profile",children:"here"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export CPD_USERNAME=cpadmin\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the required watsonx Assistant service instances for watsonx Orchestrate."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-wxo-assistant \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--create_assistants=true \\\n--user=${CPD_USERNAME} \\\n--auth_type=apikey\n"})}),"\n",(0,t.jsx)(n.p,{children:"Input the apikey you generated when you created the cpd-cli profile."}),"\n",(0,t.jsx)(n.p,{children:"Apply the olm"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=watsonx_orchestrate\n"})}),"\n",(0,t.jsx)(n.p,{children:"When that command returns, apply the Custom Resource"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=watsonx_orchestrate \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Verify the the cr was applied successfully with this command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=watsonx_orchestrate\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:["As of version 4.8.4 of CP4D, deploying the CR for Watsonx Orchestrate can sometimes get hung up on a mongodb pod error. This can hold up the entire installation as documented ",(0,t.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=limitations-watsonx-orchestrate#orchestrate-known-issues__db-pod-error__title__1",children:"here"})]}),(0,t.jsx)(n.p,{children:"If the deployment is hanging, run the following commands to verify the issue:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"oc exec -it -c mongodb-agent  mongodb-wo-mongo-ops-manager-db-0 -- /opt/scripts/readinessprobe\n"})}),(0,t.jsx)(n.p,{children:"This may return"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'panic: Get "[https://172.30.0.1:443/api/v1/namespaces/cpd-instance-1/pods/mongodb-wo-mongo-ops-manager-db-0](https://172.30.0.1/api/v1/namespaces/cpd-instance-1/pods/mongodb-wo-mongo-ops-manager-db-0)": dial tcp 172.30.0.1:443: i/o timeout\n'})}),(0,t.jsx)(n.p,{children:"Resolve the error by running the following:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'# Update opsmanager labels to allow access\noc patch opsmanager mongodb-wo-mongo-ops-manager --type merge --patch \'{"spec":{"applicationDatabase":{"podSpec":{"podTemplate":{"metadata":{"labels":{"wo.watsonx.ibm.com/external-access":"true"}}}}}}}\'\n# Delete existing sts to force re-rollout:\noc delete sts mongodb-wo-mongo-ops-manager-db\n'})})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);